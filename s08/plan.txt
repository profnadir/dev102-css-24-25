1 - Transformations :

1-1 CSS 2D Transforms Methods
With the CSS transform property you can use the following 2D transformation methods:

*translate()
div {
  transform: translate(50px, 100px);
}

*rotate()
div {
  transform: rotate(20deg);
}

*scaleX()
scaleY()
scale()
div {
  transform: scale(2, 3);
}

*skewX()
skewY()
skew()
div {
  transform: skewY(20deg);
}


matrix()
matrix(scaleX(), skewY(), skewX(), scaleY(), translateX(), translateY())
div {
  transform: matrix(1, -0.3, 0, 1, 0, 0);
}

-----------------------------------------------------
1-2 CSS 3D Transformations.

rotateX()
rotateY()
rotateZ()

-----------------------------------------------------

2 - Transition
In this chapter you will learn about the following properties:

transition
transition-delay
transition-duration
transition-property

*transition-timing-function
ease - specifies a transition effect with a slow start, then fast, then end slowly (this is default)
linear - specifies a transition effect with the same speed from start to end
ease-in - specifies a transition effect with a slow start
ease-out - specifies a transition effect with a slow end
ease-in-out - specifies a transition effect with a slow start and end
cubic-bezier(n,n,n,n) - lets you define your own values in a cubic-bezier function

--------------------------------------------------------

3 - Animations
In this chapter you will learn about the following properties:

@keyframes
animation-name
animation-duration
animation-delay
animation-iteration-count
animation-direction
animation-timing-function
animation

@keyframes example {
  from {background-color: red;}
  to {background-color: yellow;}
}

/* The element to apply the animation to */
div {
  width: 100px;
  height: 100px;
  background-color: red;
  animation-name: example;
  animation-duration: 4s;
}

@keyframes example {
  0%   {background-color: red;}
  25%  {background-color: yellow;}
  50%  {background-color: blue;}
  100% {background-color: green;}
}

div {
  animation: example 5s linear 2s infinite alternate;
}